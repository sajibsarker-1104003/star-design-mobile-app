datasource db {
  provider = "mysql"
  url      = env("DB_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Menu {
  menu_id   Int     @id @default(autoincrement()) // Assuming primary key
  menu_name String? @unique
  meta_desc String? 
  meta_key  String? 
  page_cn   String? 
  img1      String? 
  img2      String? 
  type      Boolean @default(true)
  activity  Boolean @default(true)

  
  subMenus  SubMenu[] // ðŸ‘ˆ Relation to SubMenu

  @@map("menu") // Map to the actual SQL table name
}

model SubMenu {
  sub_menu_id Int      @id @default(autoincrement())
  sub_menu    String?
  menu_id     Int
  menu        Menu    @relation(fields: [menu_id], references: [menu_id])
  menu_name   String?  // duplicated from Menu
  meta_desc   String?  
  meta_key    String?  
  page_cn     String?  
  img1        String?  
  img2        String?  
  activity    Boolean @default(true)

  @@map("sub_menu")
}

model SlideImage {
  id        Int      @id @default(autoincrement())
  title_one String   @unique
  title_two String?
  img1      String?
  img2      String?
  url       String?
  time      DateTime

  @@map("slideImage") // Change to your actual table name if needed
}

model Category {
  category_id   Int           @id @default(autoincrement())
  name          String        @unique
  description   String?
  img_url       String? @db.VarChar(255)
  active        Boolean       @default(true)

  subcategories Subcategory[]
  products      Product[]

  @@map("category")
}

model Subcategory {
  subcategory_id Int           @id @default(autoincrement())
  name           String
  description    String?
  img_url        String?  @db.VarChar(255)
  active         Boolean       @default(true)

  category_id    Int
  category       Category      @relation(fields: [category_id], references: [category_id], onDelete: Cascade)

  products       Product[]

  @@unique([name, category_id]) // Ensures name is unique within a category
  @@map("subcategory")
}

model Product {
  product_id     Int           @id @default(autoincrement())
  name           String
  description    String?
  price          Float
  img_url        String?   @db.VarChar(255)
  active         Boolean       @default(true)

  category_id    Int?
  subcategory_id Int?

  category       Category?     @relation(fields: [category_id], references: [category_id], onDelete: SetNull)
  subcategory    Subcategory?  @relation(fields: [subcategory_id], references: [subcategory_id], onDelete: SetNull)

  @@unique([name, category_id])
  @@unique([name, subcategory_id])

  
  @@map("product")
}
